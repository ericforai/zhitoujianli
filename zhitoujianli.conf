# ============================================================
# 智投简历生产环境 Nginx 配置
# 域名: zhitoujianli.com, www.zhitoujianli.com
# 功能: HTTPS 强制跳转、CORS 配置、API 反向代理、SPA 路由支持
# 更新时间: 2025-10-16
# ============================================================

# 上游后端服务器配置
upstream backend_servers {
    server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP 强制跳转到 HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name zhitoujianli.com www.zhitoujianli.com;

    # Let's Encrypt 验证路径（证书续签时需要）
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        allow all;
    }

    # 其他所有请求强制跳转 HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 主配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name zhitoujianli.com www.zhitoujianli.com;

    # ============================================================
    # SSL 证书配置
    # ============================================================
    ssl_certificate     /etc/letsencrypt/live/zhitoujianli.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zhitoujianli.com/privkey.pem;

    # SSL 安全配置（推荐配置）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # OCSP Stapling（提升 SSL 性能）
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/zhitoujianli.com/chain.pem;

    # ============================================================
    # 前端静态文件配置
    # ============================================================
    # 使用 React build 输出目录
    root /root/zhitoujianli/frontend/build;
    index index.html;

    # 静态资源缓存策略
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA 路由支持（所有前端路由都返回 index.html）
    location / {
        try_files $uri $uri/ /index.html;
    }

    # ============================================================
    # API 反向代理配置
    # ============================================================
    location /api/ {
        # 代理到后端服务器（使用 upstream）
        proxy_pass http://backend_servers;

        # 代理请求头配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # ============================================================
        # CORS 配置（仅允许 www.zhitoujianli.com）
        # ============================================================
        add_header 'Access-Control-Allow-Origin' 'https://www.zhitoujianli.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With' always;
        add_header 'Access-Control-Max-Age' '3600' always;

        # OPTIONS 预检请求优化
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://www.zhitoujianli.com' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, X-Requested-With' always;
            add_header 'Access-Control-Max-Age' '3600' always;
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
    }

    # ============================================================
    # 安全响应头
    # ============================================================
    # HSTS（强制使用 HTTPS）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # 防止点击劫持
    add_header X-Frame-Options "DENY" always;

    # 防止 MIME 类型嗅探
    add_header X-Content-Type-Options "nosniff" always;

    # XSS 防护
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer 策略
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy（根据实际需求调整）
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https://zhitoujianli.com https://www.zhitoujianli.com;" always;

    # ============================================================
    # Gzip 压缩配置
    # ============================================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # ============================================================
    # 日志配置
    # ============================================================
    access_log /var/log/nginx/zhitoujianli_access.log;
    error_log  /var/log/nginx/zhitoujianli_error.log warn;

    # ============================================================
    # 错误页面配置
    # ============================================================
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # ============================================================
    # 安全配置
    # ============================================================
    # 隐藏 Nginx 版本号
    server_tokens off;

    # 限制上传大小（根据实际需求调整）
    client_max_body_size 10M;

    # 禁止访问隐藏文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

