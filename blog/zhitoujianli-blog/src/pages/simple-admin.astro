---
// 简单的博客管理界面
---

<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="noindex" />
    <title>智投简历博客 - 简单管理</title>
    <style>
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
        margin: 0;
        padding: 20px;
        background-color: #f5f5f5;
      }
      .container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        padding: 30px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
      h1 {
        color: #333;
        border-bottom: 2px solid #007acc;
        padding-bottom: 10px;
      }
      .post-list {
        margin-top: 30px;
      }
      .post-item {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        margin-bottom: 15px;
        background: #fafafa;
      }
      .post-title {
        font-size: 18px;
        font-weight: bold;
        color: #333;
        margin-bottom: 5px;
      }
      .post-meta {
        color: #666;
        font-size: 14px;
        margin-bottom: 10px;
      }
      .post-actions {
        margin-top: 10px;
      }
      .btn {
        background: #007acc;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 10px;
        text-decoration: none;
        display: inline-block;
      }
      .btn:hover {
        background: #005a9e;
      }
      .btn-danger {
        background: #dc3545;
      }
      .btn-danger:hover {
        background: #c82333;
      }
      .new-post {
        margin-bottom: 30px;
      }
      .form-group {
        margin-bottom: 15px;
      }
      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }
      .form-group input,
      .form-group textarea {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 14px;
      }
      .form-group textarea {
        height: 200px;
        resize: vertical;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>📝 智投简历博客管理</h1>

      <div class="new-post">
        <h2>创建新文章</h2>
        <form id="newPostForm">
          <div class="form-group">
            <label for="title">标题</label>
            <input type="text" id="title" name="title" required />
          </div>
          <div class="form-group">
            <label for="excerpt">摘要</label>
            <textarea id="excerpt" name="excerpt" rows="3"></textarea>
          </div>
          <div class="form-group">
            <label for="category">分类</label>
            <input type="text" id="category" name="category" placeholder="例如：技术深度" />
          </div>
          <div class="form-group">
            <label for="tags">标签（用逗号分隔）</label>
            <input type="text" id="tags" name="tags" placeholder="例如：AI,求职,简历" />
          </div>
          <div class="form-group">
            <label for="content">内容（Markdown格式）</label>
            <textarea id="content" name="content" required></textarea>
          </div>
          <button type="submit" class="btn">创建文章</button>
        </form>
      </div>

      <div class="post-list">
        <h2>现有文章</h2>
        <div id="postsList">
          <p>正在加载文章列表...</p>
        </div>
      </div>
    </div>

    <script>
      // 简单的博客管理功能
      class BlogManager {
        constructor() {
          this.init();
        }

        init() {
          this.loadPosts();
          this.setupForm();
        }

        async loadPosts() {
          try {
            const response = await fetch('/api/posts');
            if (response.ok) {
              const posts = await response.json();
              this.renderPosts(posts);
            } else {
              document.getElementById('postsList').innerHTML = '<p>无法加载文章列表。请检查服务器配置。</p>';
            }
          } catch (error) {
            document.getElementById('postsList').innerHTML = '<p>加载文章时出错：' + error.message + '</p>';
          }
        }

        renderPosts(posts) {
          const container = document.getElementById('postsList');
          if (posts.length === 0) {
            container.innerHTML = '<p>暂无文章。</p>';
            return;
          }

          const html = posts
            .map(
              (post) => `
                    <div class="post-item">
                        <div class="post-title">${post.title}</div>
                        <div class="post-meta">
                            分类: ${post.category || '未分类'} |
                            标签: ${post.tags ? post.tags.join(', ') : '无'} |
                            创建时间: ${new Date(post.publishDate || post.createdAt).toLocaleDateString()}
                        </div>
                        <div class="post-actions">
                            <a href="/${post.slug}" class="btn" target="_blank">查看</a>
                            <button class="btn" onclick="editPost('${post.slug}')">编辑</button>
                            <button class="btn btn-danger" onclick="deletePost('${post.slug}')">删除</button>
                        </div>
                    </div>
                `
            )
            .join('');

          container.innerHTML = html;
        }

        setupForm() {
          document.getElementById('newPostForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(e.target);
            const postData = {
              title: formData.get('title'),
              excerpt: formData.get('excerpt'),
              category: formData.get('category'),
              tags: formData
                .get('tags')
                .split(',')
                .map((tag) => tag.trim())
                .filter((tag) => tag),
              content: formData.get('content'),
              publishDate: new Date().toISOString(),
            };

            try {
              const response = await fetch('/api/posts', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(postData),
              });

              if (response.ok) {
                alert('文章创建成功！');
                e.target.reset();
                this.loadPosts();
              } else {
                alert('创建文章失败：' + response.statusText);
              }
            } catch (error) {
              alert('创建文章时出错：' + error.message);
            }
          });
        }
      }

      // 全局函数
      function editPost(slug) {
        alert('编辑功能需要后端API支持。请联系开发人员。');
      }

      function deletePost(slug) {
        if (confirm('确定要删除这篇文章吗？')) {
          alert('删除功能需要后端API支持。请联系开发人员。');
        }
      }

      // 初始化
      new BlogManager();
    </script>
  </body>
</html>
